import { load, hasDependency } from '../../util/plugin.js';
import { toEntryPattern } from '../../util/protocols.js';
export const NAME = 'Cypress';
export const ENABLERS = ['cypress'];
export const isEnabled = ({ dependencies }) => hasDependency(dependencies, ENABLERS);
export const CONFIG_FILE_PATTERNS = ['cypress.config.{js,ts,mjs,cjs}'];
const TEST_FILE_PATTERNS = ['cypress/e2e/**/*.cy.{js,jsx,ts,tsx}'];
const SUPPORT_FILE_PATTERNS = [
    'cypress/support/e2e.{js,jsx,ts,tsx}',
    'cypress/plugins/index.js',
];
export const ENTRY_FILE_PATTERNS = [...TEST_FILE_PATTERNS, ...SUPPORT_FILE_PATTERNS];
export const findDependencies = async (configFilePath) => {
    const config = await load(configFilePath);
    if (!config)
        return [];
    const patterns = [config.e2e?.specPattern ?? [], config.component?.specPattern ?? []].flat();
    const entryPatterns = (patterns.length > 0 ? patterns : TEST_FILE_PATTERNS).map(toEntryPattern);
    return [...entryPatterns, ...SUPPORT_FILE_PATTERNS.map(toEntryPattern)];
};
