var _e = Object.defineProperty;
var me = (e, t, n) => t in e ? _e(e, t, { enumerable: !0, configurable: !0, writable: !0, value: n }) : e[t] = n;
var z = (e, t, n) => (me(e, typeof t != "symbol" ? t + "" : t, n), n);
import { OverlayScrollbars as F } from "overlayscrollbars";
function B() {
}
function A(e, t) {
  for (const n in t)
    e[n] = t[n];
  return (
    /** @type {T & S} */
    e
  );
}
function Q(e) {
  return e();
}
function G() {
  return /* @__PURE__ */ Object.create(null);
}
function O(e) {
  e.forEach(Q);
}
function W(e) {
  return typeof e == "function";
}
function X(e, t) {
  return e != e ? t == t : e !== t || e && typeof e == "object" || typeof e == "function";
}
function he(e) {
  return Object.keys(e).length === 0;
}
function Y(e, t, n, r) {
  if (e) {
    const o = Z(e, t, n, r);
    return e[0](o);
  }
}
function Z(e, t, n, r) {
  return e[1] && r ? A(n.ctx.slice(), e[1](r(t))) : n.ctx;
}
function $(e, t, n, r) {
  if (e[2] && r) {
    const o = e[2](r(n));
    if (t.dirty === void 0)
      return o;
    if (typeof o == "object") {
      const l = [], i = Math.max(t.dirty.length, o.length);
      for (let a = 0; a < i; a += 1)
        l[a] = t.dirty[a] | o[a];
      return l;
    }
    return t.dirty | o;
  }
  return t.dirty;
}
function ee(e, t, n, r, o, l) {
  if (o) {
    const i = Z(t, n, r, l);
    e.p(i, o);
  }
}
function te(e) {
  if (e.ctx.length > 32) {
    const t = [], n = e.ctx.length / 32;
    for (let r = 0; r < n; r++)
      t[r] = -1;
    return t;
  }
  return -1;
}
function ye(e) {
  const t = {};
  for (const n in e)
    n[0] !== "$" && (t[n] = e[n]);
  return t;
}
function H(e, t) {
  const n = {};
  t = new Set(t);
  for (const r in e)
    !t.has(r) && r[0] !== "$" && (n[r] = e[r]);
  return n;
}
function U(e, t, n) {
  e.insertBefore(t, n || null);
}
function j(e) {
  e.parentNode && e.parentNode.removeChild(e);
}
function ne(e) {
  return document.createElement(e);
}
function ge(e) {
  return document.createTextNode(e);
}
function pe() {
  return ge("");
}
function x(e, t, n) {
  n == null ? e.removeAttribute(t) : e.getAttribute(t) !== n && e.setAttribute(t, n);
}
const be = ["width", "height"];
function ve(e, t) {
  const n = Object.getOwnPropertyDescriptors(e.__proto__);
  for (const r in t)
    t[r] == null ? e.removeAttribute(r) : r === "style" ? e.style.cssText = t[r] : r === "__value" ? e.value = e[r] = t[r] : n[r] && n[r].set && be.indexOf(r) === -1 ? e[r] = t[r] : x(e, r, t[r]);
}
function ke(e, t) {
  Object.keys(t).forEach((n) => {
    we(e, n, t[n]);
  });
}
function we(e, t, n) {
  const r = t.toLowerCase();
  r in e ? e[r] = typeof e[r] == "boolean" && n === "" ? !0 : n : t in e ? e[t] = typeof e[t] == "boolean" && n === "" ? !0 : n : x(e, t, n);
}
function J(e) {
  return /-/.test(e) ? ke : ve;
}
function Ee(e) {
  return Array.from(e.childNodes);
}
function Ie(e, t, { bubbles: n = !1, cancelable: r = !1 } = {}) {
  return new CustomEvent(e, { detail: t, bubbles: n, cancelable: r });
}
let E;
function w(e) {
  E = e;
}
function M() {
  if (!E)
    throw new Error("Function called outside component initialization");
  return E;
}
function Oe(e) {
  M().$$.after_update.push(e);
}
function Se(e) {
  M().$$.on_destroy.push(e);
}
function Ae() {
  const e = M();
  return (t, n, { cancelable: r = !1 } = {}) => {
    const o = e.$$.callbacks[t];
    if (o) {
      const l = Ie(
        /** @type {string} */
        t,
        n,
        { cancelable: r }
      );
      return o.slice().forEach((i) => {
        i.call(e, l);
      }), !l.defaultPrevented;
    }
    return !0;
  };
}
const b = [], C = [];
let v = [];
const K = [], Ce = /* @__PURE__ */ Promise.resolve();
let L = !1;
function je() {
  L || (L = !0, Ce.then(re));
}
function R(e) {
  v.push(e);
}
const P = /* @__PURE__ */ new Set();
let p = 0;
function re() {
  if (p !== 0)
    return;
  const e = E;
  do {
    try {
      for (; p < b.length; ) {
        const t = b[p];
        p++, w(t), De(t.$$);
      }
    } catch (t) {
      throw b.length = 0, p = 0, t;
    }
    for (w(null), b.length = 0, p = 0; C.length; )
      C.pop()();
    for (let t = 0; t < v.length; t += 1) {
      const n = v[t];
      P.has(n) || (P.add(n), n());
    }
    v.length = 0;
  } while (b.length);
  for (; K.length; )
    K.pop()();
  L = !1, P.clear(), w(e);
}
function De(e) {
  if (e.fragment !== null) {
    e.update(), O(e.before_update);
    const t = e.dirty;
    e.dirty = [-1], e.fragment && e.fragment.p(e.ctx, t), e.after_update.forEach(R);
  }
}
function Ne(e) {
  const t = [], n = [];
  v.forEach((r) => e.indexOf(r) === -1 ? t.push(r) : n.push(r)), n.forEach((r) => r()), v = t;
}
const S = /* @__PURE__ */ new Set();
let y;
function ze() {
  y = {
    r: 0,
    c: [],
    p: y
    // parent group
  };
}
function Fe() {
  y.r || O(y.c), y = y.p;
}
function k(e, t) {
  e && e.i && (S.delete(e), e.i(t));
}
function I(e, t, n, r) {
  if (e && e.o) {
    if (S.has(e))
      return;
    S.add(e), y.c.push(() => {
      S.delete(e), r && (n && e.d(1), r());
    }), e.o(t);
  } else
    r && r();
}
function Pe(e, t) {
  const n = {}, r = {}, o = { $$scope: 1 };
  let l = e.length;
  for (; l--; ) {
    const i = e[l], a = t[l];
    if (a) {
      for (const c in i)
        c in a || (r[c] = 1);
      for (const c in a)
        o[c] || (n[c] = a[c], o[c] = 1);
      e[l] = a;
    } else
      for (const c in i)
        o[c] = 1;
  }
  for (const i in r)
    i in n || (n[i] = void 0);
  return n;
}
function qe(e, t, n) {
  const { fragment: r, after_update: o } = e.$$;
  r && r.m(t, n), R(() => {
    const l = e.$$.on_mount.map(Q).filter(W);
    e.$$.on_destroy ? e.$$.on_destroy.push(...l) : O(l), e.$$.on_mount = [];
  }), o.forEach(R);
}
function Be(e, t) {
  const n = e.$$;
  n.fragment !== null && (Ne(n.after_update), O(n.on_destroy), n.fragment && n.fragment.d(t), n.on_destroy = n.fragment = null, n.ctx = []);
}
function Le(e, t) {
  e.$$.dirty[0] === -1 && (b.push(e), je(), e.$$.dirty.fill(0)), e.$$.dirty[t / 31 | 0] |= 1 << t % 31;
}
function Re(e, t, n, r, o, l, i = null, a = [-1]) {
  const c = E;
  w(e);
  const s = e.$$ = {
    fragment: null,
    ctx: [],
    // state
    props: l,
    update: B,
    not_equal: o,
    bound: G(),
    // lifecycle
    on_mount: [],
    on_destroy: [],
    on_disconnect: [],
    before_update: [],
    after_update: [],
    context: new Map(t.context || (c ? c.$$.context : [])),
    // everything else
    callbacks: G(),
    dirty: a,
    skip_bound: !1,
    root: t.target || c.$$.root
  };
  i && i(s.root);
  let f = !1;
  if (s.ctx = n ? n(e, t.props || {}, (u, _, ...m) => {
    const h = m.length ? m[0] : _;
    return s.ctx && o(s.ctx[u], s.ctx[u] = h) && (!s.skip_bound && s.bound[u] && s.bound[u](h), f && Le(e, u)), _;
  }) : [], s.update(), f = !0, O(s.before_update), s.fragment = r ? r(s.ctx) : !1, t.target) {
    if (t.hydrate) {
      const u = Ee(t.target);
      s.fragment && s.fragment.l(u), u.forEach(j);
    } else
      s.fragment && s.fragment.c();
    t.intro && k(e.$$.fragment), qe(e, t.target, t.anchor), re();
  }
  w(c);
}
class Ue {
  constructor() {
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    z(this, "$$");
    /**
     * ### PRIVATE API
     *
     * Do not use, may change at any time
     *
     * @type {any}
     */
    z(this, "$$set");
  }
  /** @returns {void} */
  $destroy() {
    Be(this, 1), this.$destroy = B;
  }
  /**
   * @template {Extract<keyof Events, string>} K
   * @param {K} type
   * @param {((e: Events[K]) => void) | null | undefined} callback
   * @returns {() => void}
   */
  $on(t, n) {
    if (!W(n))
      return B;
    const r = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
    return r.push(n), () => {
      const o = r.indexOf(n);
      o !== -1 && r.splice(o, 1);
    };
  }
  /**
   * @param {Partial<Props>} props
   * @returns {void}
   */
  $set(t) {
    this.$$set && !he(t) && (this.$$.skip_bound = !0, this.$$set(t), this.$$.skip_bound = !1);
  }
}
const xe = "4";
typeof window < "u" && (window.__svelte || (window.__svelte = { v: /* @__PURE__ */ new Set() })).v.add(xe);
const Me = () => {
  if (typeof window > "u") {
    const s = () => {
    };
    return [s, s];
  }
  let e, t;
  const n = window, r = typeof n.requestIdleCallback == "function", o = n.requestAnimationFrame, l = n.cancelAnimationFrame, i = r ? n.requestIdleCallback : o, a = r ? n.cancelIdleCallback : l, c = () => {
    a(e), l(t);
  };
  return [
    (s, f) => {
      c(), e = i(
        r ? () => {
          c(), t = o(s);
        } : s,
        typeof f == "object" ? f : { timeout: 2233 }
      );
    },
    c
  ];
};
function Te(e) {
  let t, n;
  const r = (
    /*#slots*/
    e[12].default
  ), o = Y(
    r,
    e,
    /*$$scope*/
    e[11],
    null
  );
  return {
    c() {
      t = ne("div"), o && o.c(), x(t, "data-overlayscrollbars-contents", "");
    },
    m(l, i) {
      U(l, t, i), o && o.m(t, null), e[13](t), n = !0;
    },
    p(l, i) {
      o && o.p && (!n || i & /*$$scope*/
      2048) && ee(
        o,
        r,
        l,
        /*$$scope*/
        l[11],
        n ? $(
          r,
          /*$$scope*/
          l[11],
          i,
          null
        ) : te(
          /*$$scope*/
          l[11]
        ),
        null
      );
    },
    i(l) {
      n || (k(o, l), n = !0);
    },
    o(l) {
      I(o, l), n = !1;
    },
    d(l) {
      l && j(t), o && o.d(l), e[13](null);
    }
  };
}
function Ve(e) {
  let t;
  const n = (
    /*#slots*/
    e[12].default
  ), r = Y(
    n,
    e,
    /*$$scope*/
    e[11],
    null
  );
  return {
    c() {
      r && r.c();
    },
    m(o, l) {
      r && r.m(o, l), t = !0;
    },
    p(o, l) {
      r && r.p && (!t || l & /*$$scope*/
      2048) && ee(
        r,
        n,
        o,
        /*$$scope*/
        o[11],
        t ? $(
          n,
          /*$$scope*/
          o[11],
          l,
          null
        ) : te(
          /*$$scope*/
          o[11]
        ),
        null
      );
    },
    i(o) {
      t || (k(r, o), t = !0);
    },
    o(o) {
      I(r, o), t = !1;
    },
    d(o) {
      r && r.d(o);
    }
  };
}
function q(e) {
  let t, n, r, o;
  const l = [Ve, Te], i = [];
  function a(f, u) {
    return (
      /*element*/
      f[0] === "body" ? 0 : 1
    );
  }
  n = a(e), r = i[n] = l[n](e);
  let c = [
    { "data-overlayscrollbars-initialize": "" },
    /*$$restProps*/
    e[3]
  ], s = {};
  for (let f = 0; f < c.length; f += 1)
    s = A(s, c[f]);
  return {
    c() {
      t = ne(
        /*element*/
        e[0]
      ), r.c(), J(
        /*element*/
        e[0]
      )(t, s);
    },
    m(f, u) {
      U(f, t, u), i[n].m(t, null), e[14](t), o = !0;
    },
    p(f, u) {
      let _ = n;
      n = a(f), n === _ ? i[n].p(f, u) : (ze(), I(i[_], 1, 1, () => {
        i[_] = null;
      }), Fe(), r = i[n], r ? r.p(f, u) : (r = i[n] = l[n](f), r.c()), k(r, 1), r.m(t, null)), J(
        /*element*/
        f[0]
      )(t, s = Pe(c, [
        { "data-overlayscrollbars-initialize": "" },
        u & /*$$restProps*/
        8 && /*$$restProps*/
        f[3]
      ]));
    },
    i(f) {
      o || (k(r), o = !0);
    },
    o(f) {
      I(r), o = !1;
    },
    d(f) {
      f && j(t), i[n].d(), e[14](null);
    }
  };
}
function Ge(e) {
  let t = (
    /*element*/
    e[0]
  ), n, r, o = (
    /*element*/
    e[0] && q(e)
  );
  return {
    c() {
      o && o.c(), n = pe();
    },
    m(l, i) {
      o && o.m(l, i), U(l, n, i), r = !0;
    },
    p(l, [i]) {
      /*element*/
      l[0] ? t ? X(
        t,
        /*element*/
        l[0]
      ) ? (o.d(1), o = q(l), t = /*element*/
      l[0], o.c(), o.m(n.parentNode, n)) : o.p(l, i) : (o = q(l), t = /*element*/
      l[0], o.c(), o.m(n.parentNode, n)) : t && (o.d(1), o = null, t = /*element*/
      l[0]);
    },
    i(l) {
      r || (k(o, l), r = !0);
    },
    o(l) {
      I(o, l), r = !1;
    },
    d(l) {
      l && j(n), o && o.d(l);
    }
  };
}
function He(e, t, n) {
  const r = ["element", "options", "events", "defer", "osInstance", "getElement"];
  let o = H(t, r), { $$slots: l = {}, $$scope: i } = t, { element: a = "div" } = t, { options: c = void 0 } = t, { events: s = void 0 } = t, { defer: f = void 0 } = t, u = null, _ = null, m = null, h, T;
  const [oe, le] = Me(), ie = () => {
    const d = () => {
      const g = _;
      g && (u == null || u.destroy(), n(9, u = F(
        a === "body" ? { target: g, cancel: { body: null } } : {
          target: g,
          elements: { viewport: m, content: m }
        },
        c || {},
        h || {}
      )));
    };
    f ? oe(d, f) : d(), T = a;
  }, V = {
    initialized: "osInitialized",
    updated: "osUpdated",
    destroyed: "osDestroyed",
    scroll: "osScroll"
  }, se = Ae(), fe = () => u, ue = () => _;
  Se(() => {
    le(), u == null || u.destroy();
  }), Oe(() => {
    T !== a && ie();
  });
  function ce(d) {
    C[d ? "unshift" : "push"](() => {
      m = d, n(2, m);
    });
  }
  function ae(d) {
    C[d ? "unshift" : "push"](() => {
      _ = d, n(1, _);
    });
  }
  return e.$$set = (d) => {
    t = A(A({}, t), ye(d)), n(3, o = H(t, r)), "element" in d && n(0, a = d.element), "options" in d && n(4, c = d.options), "events" in d && n(5, s = d.events), "defer" in d && n(6, f = d.defer), "$$scope" in d && n(11, i = d.$$scope);
  }, e.$$.update = () => {
    if (e.$$.dirty & /*events*/
    32) {
      const d = s || {};
      n(10, h = Object.keys(V).reduce(
        (g, D) => {
          const N = d[D];
          return g[D] = [
            (...de) => se(
              // @ts-ignore
              V[D],
              // @ts-ignore
              de
            ),
            ...(Array.isArray(N) ? N : [N]).filter(Boolean)
          ], g;
        },
        {}
      ));
    }
    e.$$.dirty & /*instance, options*/
    528 && F.valid(u) && u.options(c || {}, !0), e.$$.dirty & /*instance, combinedEvents*/
    1536 && F.valid(u) && u.on(
      /* c8 ignore next */
      h || {},
      !0
    );
  }, [
    a,
    _,
    m,
    o,
    c,
    s,
    f,
    fe,
    ue,
    u,
    h,
    i,
    l,
    ce,
    ae
  ];
}
class Je extends Ue {
  constructor(t) {
    super(), Re(this, t, He, Ge, X, {
      element: 0,
      options: 4,
      events: 5,
      defer: 6,
      osInstance: 7,
      getElement: 8
    });
  }
  get osInstance() {
    return this.$$.ctx[7];
  }
  get getElement() {
    return this.$$.ctx[8];
  }
}
const We = Je;
export {
  We as OverlayScrollbarsComponent
};
//# sourceMappingURL=overlayscrollbars-svelte.mjs.map
